name: AIM AHEAD API CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install --dev
      - name: Check code formatting with black
        run: |
          pipenv run black src
      - name: Lint with flake8
        run: |
          pipenv run flake8 src

  test:
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install --deploy --ignore-pipfile
      - name: Run tests
        run: |
          pipenv run pytest

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Login to ECR
        id: ecr
        uses: jwalton/gh-ecr-login@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: us-east-1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: 211125738433.dkr.ecr.us-east-1.amazonaws.com/aim-ahead-repository
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

#      - name: Deploy to Amazon ECS
#        run: |
#          # 使用 AWS CLI 或 Amazon ECS 的部署脚本更新 ECS 服务
#          # 这需要您已经有一个运行的 ECS 服务和任务定义
#          aws ecs update-service --cluster your-cluster-name --service your-service-name --force-new-deployment
#        env:
#          AWS_REGION: us-east-1